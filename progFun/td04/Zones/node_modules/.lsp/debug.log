Hello - from /autofs/unityaccount/cremi/cgoedefroit/.vscode/extensions/jaredly.reason-vscode-1.7.1/bin.native.linux
Previous log location: /tmp/cache-cgoedefroit/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true,"useOldDuneProcess":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///autofs/unitytravail/travail/cgoedefroit/progFun/td04/Zones/zones.ml","languageId":"ocaml","version":1,"text":"type mycomplex = C of float * float\n\nlet realpart c = match c with C(x,_) -> x\nlet imagpart c = match c with C(_,y) -> y\n\nlet c_origin = C(0.,0.)\nlet p_12 = C(1.,2.)\n\nlet square x = x * x\n\nlet c_abs c = C(sqrt square (realpart c) , sqrt square (imagpart c))\nlet c_sum c1 c2 = C(realpart c1 +. realpart c2, imagpart c1 +. imagpart c2)\nlet c_dif c1 c2 = \nlet c_mul c1 c2 = C(realpart c1 *. realpart c2, imagpart c1 *. imagpart c2)\nlet c_sca lambda c = \nlet c_exp c = C(exp realpart c, exp imagpart c)\n\n(* A zone is represented as a function that takes a point in 2-dimensional\n   space as a parameter (represented as C(x, y)), and returns true\n   if and only if the point is in the zone, and false otherwise.\n*)\n\n(* A zone that contains no points.  A point is never in this zone. *)\nlet nowhere = fun point -> false\n\n(*  To determine whether a point is in a zone, just call this function. *)\nlet point_in_zone_p point zone = \n\n(* Create a circular zone with center in (0,0) with the indicated radius. *)\nlet make_disk0 radius = fun point -> c_abs point <= radius\n\n(* Given a zone, move it by a vector indicated as a complex number\n   passed as the argument. *)\nlet move_zone zone vector = fun p -> point_in_zone_p (c_dif p vector) zone\n\n(* A zone that contains every point. A point is always in this zone. *)\nlet everywhere = \n\n(* Make a rectangle in the first quadrant. *)\nlet make_rectangle width height =\n\n(* Given two zones, create a zone that behaves as the intersection of the two. *)\nlet zone_intersection zone1 zone2 =\n\n(* Test all zone_manipulating code. *)\nlet test = \n  let c = make_disk0 1. in\n  let c1 = move_zone c (C(1., 0.)) in\n  assert (point_in_zone_p (C(0.0, 0.5)) c);\n  assert (not (point_in_zone_p (C(1.0, 0.5)) c));\n  assert (point_in_zone_p (C(0.5, 0.)) (zone_intersection c c1))\n\n(* point_in_zone_p (C(3.5 2.1)) everywhere *)\n\n(* Given two zones, create a zone that behaves as the union of the two. *)\nlet zone_union zone1 zone2 =\n\n(* Given a zone, create a zone that contains every point not in zone. *)\nlet zone_complement zone =\n\t\t\t\t\t       \nlet make_disk radius center =\n  fun p -> (c_abs (c_dif center p)) <= radius\n\n(* point_in_zone_p (C(2., 2.)) (make_disk 1. (C((1.5, 1.5))) *)\n\n(* Scale a zone in two dimensions *)\nlet scale_zone0 zone coeff =\n\n(* Test scale_zone *)\n(* point_in_zone_p (C(5., 5.)) (scale_zone0 (make_disk0 2.) (10., 10.)) *)\n\nlet scale_zone zone coeff origin =\n\nlet _ = point_in_zone_p (C(6.0, 0.5)) (scale_zone0 (make_disk 1. (C(4.0, 4.0))) (C(6.0, 4.0)))\n\nlet c_i = C(0., -1.)\n\nlet rotate_zone0 zone angle =\n\n(* point_in_zone_p (C(0.5, 8.)) (rotate_zone0 (make_rectangle 10. 2.) (3.1416 /. 2.)) *)\n\nlet rotate_zone zone angle center =\n\n\n"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///autofs/unitytravail/travail/cgoedefroit/progFun/td04/Zones/zones.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00309944152832ms
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///autofs/unitytravail/travail/cgoedefroit/progFun/td04/Zones/zones.ml"},"range":{"start":{"line":15,"character":47},"end":{"line":15,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///autofs/unitytravail/travail/cgoedefroit/progFun/td04/Zones/zones.ml"},"range":{"start":{"line":15,"character":47},"end":{"line":15,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00309944152832ms
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///autofs/unitytravail/travail/cgoedefroit/progFun/td04/Zones/zones.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00286102294922ms
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///autofs/unitytravail/travail/cgoedefroit/progFun/td04/Zones/zones.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00286102294922ms
Sending response {"id": 5, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///autofs/unitytravail/travail/cgoedefroit/progFun/td04/Zones/zones.ml"}}}
